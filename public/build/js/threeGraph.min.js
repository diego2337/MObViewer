function displayGraphInfo(jason){console.log(jason),document.getElementById("numberOfVertices").innerHTML=parseInt(jason.graphInfo[0].vlayer.split(" ")[0])+parseInt(jason.graphInfo[0].vlayer.split(" ")[1]),document.getElementById("numberOfEdges").innerHTML=parseInt(jason.graphInfo[0].edges),document.getElementById("firstSet").innerHTML=parseInt(jason.graphInfo[0].vlayer.split(" ")[0]),document.getElementById("secondSet").innerHTML=parseInt(jason.graphInfo[0].vlayer.split(" ")[1])}function build(data){function animate(){requestAnimationFrame(animate),renderer.render(scene,camera)}var jason=JSON.parse(data);displayGraphInfo(jason),void 0!==graph&&delete graph,graph=new Graph(jason,10,70),void 0==renderer?(canvasWidth=document.getElementById("WebGL").clientWidth,canvasHeight=document.getElementById("WebGL").clientHeight-20,(renderer=new THREE.WebGLRenderer({antialias:!0})).setClearColor("rgb(255, 255, 255)",1),renderer.setSize(canvasWidth,canvasHeight)):renderer.clear(),document.getElementById("WebGL").appendChild(renderer.domElement),void 0!==scene&&delete scene,scene=new THREE.Scene,graph.buildGraph(scene,3),new Depth(0).setZ(Math.abs(graph.getMinNode())+Math.abs(graph.getMaxNode())),void 0!==camera&&delete camera,(camera=new THREE.PerspectiveCamera(120,canvasWidth/canvasHeight,1,2e3)).position.set(0,0,70),camera.lookAt(scene.position),camera.name="camera",scene.add(camera),void 0!==light&&delete light,(light=new THREE.DirectionalLight).position.set(0,0,10),scene.add(light),void 0!==controls&&delete controls;var controls=new THREE.OrbitControls(camera,renderer.domElement);controls.minDistance=1,controls.maxDistance=500,controls.zoomSpeed=1.5,controls.target.set(0,0,0),controls.enableRotate=!1,controls.enableKeys=!1,controls.mouseButtons={PAN:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,ORBIT:THREE.MOUSE.RIGHT},void 0!==eventHandler&&delete eventHandler,eventHandler=new EventHandler(void 0,scene),document.addEventListener("mousemove",function(evt){eventHandler.mouseMoveEvent(evt,renderer,graph)},!1),animate()}var Depth=function(z){this.z=z};Depth.prototype.getZ=function(){return this.z},Depth.prototype.setZ=function(z){this.z=z};var Edge=function(edgeObject,min,max,geometry,lineBasicMaterial){min=ecmaStandard(min,0),max=ecmaStandard(max,100);try{this.edgeObject=edgeObject,this.edgeObject.id="e"+edgeObject.source.toString()+edgeObject.target.toString(),void 0==this.edgeObject.weight&&(this.edgeObject.weight=1),this.edgeRadius=(this.edgeObject.weight-min)/(max-min),lineBasicMaterial=new THREE.LineBasicMaterial({linewidth:this.edgeRadius,color:9277585,side:THREE.DoubleSide}),this.line=new THREE.LineSegments(geometry,lineBasicMaterial),this.line.name="e"+this.edgeObject.source+this.edgeObject.target,this.line.boundingBox=null,this.line.renderOrder=0,this.line.matrixAutoUpdate=!1}catch(err){throw"Constructor must have edgeObject type as first parameter!  Constructor  params:     - edgeObject: the edge object taken from the JSON file;     - min: min value to be used in feature scaling;     - max: max value to be used in feature scaling;     - geometry: a generic geometry (from three.js);     - lineBasicMaterial: line material for the object (from three.js)."}};Edge.prototype.getEdge=function(){var edge=new Edge;return edge.setGeometry(this.circleGeometry),edge.setLineBasicMaterial(this.lineBasicMaterial),edge.setLine(this.line),edge},Edge.prototype.setEdge=function(edge){this.setGeometry(edge.geometry),this.setlineBasicMaterial(edge.setlineBasicMaterial),this.setLine(edge.line)},Edge.prototype.getGeometry=function(){return this.geometry},Edge.prototype.setGeometry=function(geometry){this.geometry=geometry},Edge.prototype.getlineBasicMaterial=function(){return this.lineBasicMaterial},Edge.prototype.setlineBasicMaterial=function(lineBasicMaterial){this.lineBasicMaterial=lineBasicMaterial},Edge.prototype.getLine=function(){return this.line},Edge.prototype.setLine=function(line){this.line=line},Edge.prototype.buildEdge=function(geometry,source,target){var sourcePos=source.getCircle().position,targetPos=target.getCircle().position,v1=new THREE.Vector3(sourcePos.x,sourcePos.y,sourcePos.z),v2=new THREE.Vector3(targetPos.x,targetPos.y,targetPos.z);geometry.vertices.push(v1),geometry.vertices.push(v2)},Edge.prototype.highlight=function(){this.line.material.color.setHex(16711680)},Edge.prototype.unhighlight=function(){this.line.material.color.setHex(9277585)};var Graph=function(graph,min,max){min=ecmaStandard(min),max=ecmaStandard(max);try{if(this.graphInfo=graph.graphInfo[0],void 0!=this.graphInfo.vlayer?(this.firstLayer=this.graphInfo.vlayer.split(" "),this.firstLayer=this.firstLayer[0],this.lastLayer=this.graphInfo.vlayer.split(" "),this.lastLayer=this.lastLayer[this.lastLayer.length-1]):this.firstLayer=this.lastLayer=Math.floor(graph.nodes.length/2),this.graphInfo.min=min,this.graphInfo.max=max,this.theta=0,this.circleGeometry=new THREE.CircleGeometry(1,32),this.meshBasicMaterial=new THREE.MeshBasicMaterial({color:0,side:THREE.FrontSide,depthFunc:THREE.AlwaysDepth}),graph.nodes instanceof Array){this.nodes=[];for(i=0;i<graph.nodes.length;i++)this.nodes[i]=new Node(graph.nodes[i],min,max,this.circleGeometry,this.meshBasicMaterial)}if(this.geometry=new THREE.Geometry,graph.links instanceof Array){this.edges=[];for(var i=0;i<graph.links.length;i++)this.edges[i]=new Edge(graph.links[i],0,100,this.lineBasicMaterial)}}catch(err){throw"Unexpected error ocurred at line "+err.lineNumber+", in function Graph. "+err}};Graph.prototype.getElementById=function(id){return"e"==id.slice(0,1)?this.getEdgeById(id):this.getNodeById(id)},Graph.prototype.getNodes=function(){return this.nodes},Graph.prototype.getNodesMeshes=function(){for(var meshes=[],i=0;i<this.nodes.length;i++)meshes.push(this.nodes[i].getCircle());return meshes},Graph.prototype.getNodeById=function(id){return this.getNodeByIndex(this.findNode(id))},Graph.prototype.findNode=function(id){for(var i=0;i<this.nodes.length;i++)if(this.nodes[i].nodeObject.id==id)return i;return-1},Graph.prototype.getNodeByIndex=function(i){return-1!=i?this.nodes[i]:"Node not found."},Graph.prototype.getNumberOfNodes=function(){return this.nodes.length},Graph.prototype.setNodeById=function(id,node){var index=this.findNode(id);this.nodes[index].setNode(node)},Graph.prototype.getMinNode=function(){return this.minNode},Graph.prototype.setMinNode=function(minNode){this.minNode=minNode},Graph.prototype.getMaxNode=function(){return this.maxNode},Graph.prototype.setMaxNode=function(maxNode){this.maxNode=maxNode},Graph.prototype.getEdges=function(){return this.edges},Graph.prototype.getEdgesMeshes=function(){for(var meshes=[],i=0;i<this.edges.length;i++)meshes.push(this.edges[i].getLine());return meshes},Graph.prototype.getEdgeById=function(id){return this.getEdgeByIndex(this.findEdge(id))},Graph.prototype.findEdge=function(id){for(var i=0;i<this.edges.length;i++)if(this.edges[i].edgeObject.id==id)return i;return-1},Graph.prototype.getEdgeByIndex=function(i){return-1!=i?this.edges[i]:"Edge not found."},Graph.prototype.getEdgeByIndex=function(i){return this.edges[i]},Graph.prototype.getNumberOfEdges=function(){return this.edges.length},Graph.prototype.setEdgeById=function(id,edge){var index=this.findEdge(id);this.edges[index].setEdge(edge)},Graph.prototype.buildGraph=function(scene,layout){layout=ecmaStandard(layout,3),scene=ecmaStandard(scene,void 0);try{var scale;scale=d3.scaleLinear().domain([0,this.getNumberOfNodes()]).range([0,2*Math.PI]),2==layout?this.theta=scale(i):3==layout&&(this.theta=3);for(var j=0,i=0;i<this.nodes.length;i++)i==this.firstLayer?(this.theta=this.firstLayer/this.lastLayer*this.theta,j=parseInt(j)+parseInt(1)):i>this.firstLayer&&(j=parseInt(j)+parseInt(1)),0==i&&this.setMinNode(parseInt(i*this.theta)),i==this.nodes.length-1&&this.setMaxNode(parseInt(i*this.theta)),this.nodes[i].buildNode(i,this.firstLayer,j,20,this.theta,layout),void 0!==scene&&scene.add(this.nodes[i].getCircle());for(i=0;i<this.edges.length;i++)this.edges[i].buildEdge(this.geometry,this.getNodeById(this.edges[i].edgeObject.source),this.getNodeById(this.edges[i].edgeObject.target));if(void 0!==scene){var line=new MeshLine;line.setGeometry(this.geometry,function(p){return.3});var material=new MeshLineMaterial({color:new THREE.Color(9277585)}),lineMesh=new THREE.Mesh(line.geometry,material);scene.add(lineMesh)}}catch(err){throw"Unexpected error ocurred at line "+err.line+". "+err}};var Node=function(nodeObject,min,max,circleGeometry,meshBasicMaterial){min=ecmaStandard(min,0),max=ecmaStandard(max,10),circleGeometry=ecmaStandard(circleGeometry,void 0),meshBasicMaterial=ecmaStandard(meshBasicMaterial,void 0);try{this.nodeObject=nodeObject,void 0==this.nodeObject.weight&&(this.nodeObject.weight=1);var x=(this.nodeObject.weight-min)/(max-min)+1.5;this.meshBasicMaterial=new THREE.MeshBasicMaterial({color:0,side:THREE.FrontSide,depthFunc:THREE.AlwaysDepth})}catch(err){throw"Constructor must have nodeObject type as first parameter!  Constructor  params:     - nodeObject: the node object taken from the JSON file;     - min: min value to be used in feature scaling;     - max: max value to be used in feature scaling;     - circleGeometry: a geometry of type circle (from three.js);     - meshBasicMaterial: material for geometry (from three.js)."}finally{this.circle=new THREE.Mesh(circleGeometry,this.meshBasicMaterial),this.circle.scale.set(x,x,x),this.circle.name=""+this.nodeObject.id,this.circle.geometry.computeFaceNormals(),this.circle.geometry.computeBoundingBox(),this.circle.geometry.computeBoundingSphere(),this.circle.geometry.verticesNeedUpdate=!0,this.circle.renderOrder=1}};Node.prototype.getNode=function(){var node=new Node;return node.setCircleGeometry(this.circleGeometry),node.setMeshBasicMaterial(this.meshBasicMaterial),node.setCircle(this.circle),node},Node.prototype.setNode=function(node){this.setCircleGeometry(node.circleGeometry),this.setMeshBasicMaterial(node.meshBasicMaterial),this.setCircle(node.circle)},Node.prototype.getCircleGeometry=function(){return this.circleGeometry},Node.prototype.setCircleGeometry=function(circleGeometry){this.circleGeometry=circleGeometry},Node.prototype.getMeshBasicMaterial=function(){return this.meshBasicMaterial},Node.prototype.setMeshBasicMaterial=function(meshBasicMaterial){this.meshBasicMaterial=meshBasicMaterial},Node.prototype.getCircle=function(){return this.circle},Node.prototype.setCircle=function(circle){this.circle=circle},Node.prototype.buildNode=function(index,firstLayer,lastLayer,alpha,theta,layout){switch(layout){case 1:this.buildForceDirected();break;case 2:this.buildRadial(theta);break;case 3:this.buildBipartite(index,firstLayer,lastLayer,alpha,theta)}},Node.prototype.buildForceDirected=function(){console.log("To be implemented")},Node.prototype.buildRadial=function(theta){var x=15*Math.sin(theta),y=15*Math.cos(theta);this.circle.position.set(x,y,0)},Node.prototype.buildBipartite=function(index,firstLayer,lastLayer,alpha,theta){if(index>=firstLayer){y=alpha;index=lastLayer}else var y=-1*alpha;x=index*theta,this.circle.position.set(x,y,0)},Node.prototype.highlight=function(){this.circle.material.color.setHex(16711680)},Node.prototype.unhighlight=function(){this.circle.material.color.setHex(0)};var renderer,graph,scene,camera,light,controls,eventHandler,ecmaStandard=function(variable,defaultValue){return void 0!==variable?variable:defaultValue},EventHandler=function(raycaster,scene){raycaster=ecmaStandard(raycaster,void 0),scene=ecmaStandard(scene,void 0),this.raycaster=new THREE.Raycaster,this.scene=scene,this.highlightedElements=[]};EventHandler.prototype.getRaycaster=function(){return this.raycaster},EventHandler.prototype.setRaycaster=function(raycaster){this.raycaster=raycaster},EventHandler.prototype.getScene=function(){return this.scene},EventHandler.prototype.setScene=function(scene){this.scene=scene},EventHandler.prototype.getHighlightedElements=function(){return this.highlightedElements},EventHandler.prototype.setHighlightedElements=function(highlighted){this.highlightedElements=highlighted},EventHandler.prototype.dragEvent=function(evt,camera){console.log("dragging")},EventHandler.prototype.wheelEvent=function(evt,camera){evt.deltaY>0?camera.zoom-4>0&&(camera.zoom=camera.zoom-4,camera.updateProjectionMatrix()):(camera.zoom=camera.zoom+4,camera.updateProjectionMatrix())},EventHandler.prototype.mouseDownEvent=function(evt,camera){var lastPosition={},cam=camera;document.onmouseup=function(evt){document.onmousemove=null,document.onmouseup=null},document.onmousemove=function(evt){if(void 0!=typeof lastPosition.x){var deltaX=lastPosition.x-evt.clientX,deltaY=lastPosition.y-evt.clientY;Math.abs(deltaX)>Math.abs(deltaY)&&deltaX>0?cam.position.x=cam.position.x+2.5:Math.abs(deltaX)>Math.abs(deltaY)&&deltaX<0?cam.position.x=cam.position.x-2.5:Math.abs(deltaY)>Math.abs(deltaX)&&deltaY>0?cam.position.y=cam.position.y-2.5:Math.abs(deltaY)>Math.abs(deltaX)&&deltaY<0&&(cam.position.y=cam.position.y+2.5)}lastPosition={x:evt.clientX,y:evt.clientY}}},EventHandler.prototype.mouseMoveEvent=function(evt,renderer,graph){var canvas=renderer.domElement.getBoundingClientRect(),x=evt.clientX-canvas.left,y=evt.clientY-canvas.top,mouseX=x/renderer.domElement.clientWidth*2-1,mouseY=-y/renderer.domElement.clientHeight*2+1,mouse=new THREE.Vector2(mouseX,mouseY),camera=this.scene.getObjectByName("camera",!0);this.raycaster.setFromCamera(mouse,camera);for(var intersection=this.raycaster.intersectObjects(this.scene.children,!0)[0],i=0;i<this.highlightedElements.length;i++)(element=graph.getElementById(this.highlightedElements[i])).unhighlight(),element instanceof Node?(graph.setNodeById(this.highlightedElements[i],element),d3.select("#name").style("display","none")):graph.setEdgeById(this.highlightedElements[i],element),this.highlightedElements.splice(i,1);if(void 0!=intersection){var element=graph.getElementById(intersection.object.name);console.log(element),element.highlight(),element instanceof Node?(graph.setNodeById(intersection.object.name,element),d3.select("#name").text(element.circle.name).attr("font-family","sans-serif").attr("font-size","20px").style("display","inline").style("position","absolute").style("z-index","1").style("top",y).style("left",x).attr("fill","green")):graph.setEdgeById(intersection.object.name,element),this.highlightedElements.push(intersection.object.name)}},EventHandler.prototype.mouseOutEvent=function(graph){for(var i=0;i<this.highlightedElements.length;i++){var element=graph.getElementById(this.highlightedElements[i]);element.unhighlight(),element instanceof Node?graph.setNodeById(this.highlightedElements[i],element):graph.setEdgeById(this.highlightedElements[i],element)}this.highlightedElements=[]},THREE.OrbitControls=function(object,domElement){function getAutoRotationAngle(){return 2*Math.PI/60/60*scope.autoRotateSpeed}function getZoomScale(){return Math.pow(.95,scope.zoomSpeed)}function rotateLeft(angle){sphericalDelta.theta-=angle}function rotateUp(angle){sphericalDelta.phi-=angle}function dollyIn(dollyScale){scope.object.isPerspectiveCamera?scale/=dollyScale:scope.object.isOrthographicCamera?(scope.object.zoom=Math.max(scope.minZoom,Math.min(scope.maxZoom,scope.object.zoom*dollyScale)),scope.object.updateProjectionMatrix(),zoomChanged=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),scope.enableZoom=!1)}function dollyOut(dollyScale){scope.object.isPerspectiveCamera?scale*=dollyScale:scope.object.isOrthographicCamera?(scope.object.zoom=Math.max(scope.minZoom,Math.min(scope.maxZoom,scope.object.zoom/dollyScale)),scope.object.updateProjectionMatrix(),zoomChanged=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),scope.enableZoom=!1)}function handleMouseDownRotate(event){rotateStart.set(event.clientX,event.clientY)}function handleMouseDownDolly(event){dollyStart.set(event.clientX,event.clientY)}function handleMouseDownPan(event){panStart.set(event.clientX,event.clientY)}function handleMouseMoveRotate(event){rotateEnd.set(event.clientX,event.clientY),rotateDelta.subVectors(rotateEnd,rotateStart);var element=scope.domElement===document?scope.domElement.body:scope.domElement;rotateLeft(2*Math.PI*rotateDelta.x/element.clientWidth*scope.rotateSpeed),rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight*scope.rotateSpeed),rotateStart.copy(rotateEnd),scope.update()}function handleMouseMoveDolly(event){dollyEnd.set(event.clientX,event.clientY),dollyDelta.subVectors(dollyEnd,dollyStart),dollyDelta.y>0?dollyIn(getZoomScale()):dollyDelta.y<0&&dollyOut(getZoomScale()),dollyStart.copy(dollyEnd),scope.update()}function handleMouseMovePan(event){panEnd.set(event.clientX,event.clientY),panDelta.subVectors(panEnd,panStart),pan(panDelta.x,panDelta.y),panStart.copy(panEnd),scope.update()}function handleMouseUp(event){}function handleMouseWheel(event){event.deltaY<0?dollyOut(getZoomScale()):event.deltaY>0&&dollyIn(getZoomScale()),scope.update()}function handleKeyDown(event){switch(event.keyCode){case scope.keys.UP:pan(0,scope.keyPanSpeed),scope.update();break;case scope.keys.BOTTOM:pan(0,-scope.keyPanSpeed),scope.update();break;case scope.keys.LEFT:pan(scope.keyPanSpeed,0),scope.update();break;case scope.keys.RIGHT:pan(-scope.keyPanSpeed,0),scope.update()}}function handleTouchStartRotate(event){rotateStart.set(event.touches[0].pageX,event.touches[0].pageY)}function handleTouchStartDolly(event){var dx=event.touches[0].pageX-event.touches[1].pageX,dy=event.touches[0].pageY-event.touches[1].pageY,distance=Math.sqrt(dx*dx+dy*dy);dollyStart.set(0,distance)}function handleTouchStartPan(event){panStart.set(event.touches[0].pageX,event.touches[0].pageY)}function handleTouchMoveRotate(event){rotateEnd.set(event.touches[0].pageX,event.touches[0].pageY),rotateDelta.subVectors(rotateEnd,rotateStart);var element=scope.domElement===document?scope.domElement.body:scope.domElement;rotateLeft(2*Math.PI*rotateDelta.x/element.clientWidth*scope.rotateSpeed),rotateUp(2*Math.PI*rotateDelta.y/element.clientHeight*scope.rotateSpeed),rotateStart.copy(rotateEnd),scope.update()}function handleTouchMoveDolly(event){var dx=event.touches[0].pageX-event.touches[1].pageX,dy=event.touches[0].pageY-event.touches[1].pageY,distance=Math.sqrt(dx*dx+dy*dy);dollyEnd.set(0,distance),dollyDelta.subVectors(dollyEnd,dollyStart),dollyDelta.y>0?dollyOut(getZoomScale()):dollyDelta.y<0&&dollyIn(getZoomScale()),dollyStart.copy(dollyEnd),scope.update()}function handleTouchMovePan(event){panEnd.set(event.touches[0].pageX,event.touches[0].pageY),panDelta.subVectors(panEnd,panStart),pan(panDelta.x,panDelta.y),panStart.copy(panEnd),scope.update()}function handleTouchEnd(event){}function onMouseDown(event){if(!1!==scope.enabled){switch(event.preventDefault(),event.button){case scope.mouseButtons.ORBIT:if(!1===scope.enableRotate)return;handleMouseDownRotate(event),state=STATE.ROTATE;break;case scope.mouseButtons.ZOOM:if(!1===scope.enableZoom)return;handleMouseDownDolly(event),state=STATE.DOLLY;break;case scope.mouseButtons.PAN:if(!1===scope.enablePan)return;handleMouseDownPan(event),state=STATE.PAN}state!==STATE.NONE&&(document.addEventListener("mousemove",onMouseMove,!1),document.addEventListener("mouseup",onMouseUp,!1),scope.dispatchEvent(startEvent))}}function onMouseMove(event){if(!1!==scope.enabled)switch(event.preventDefault(),state){case STATE.ROTATE:if(!1===scope.enableRotate)return;handleMouseMoveRotate(event);break;case STATE.DOLLY:if(!1===scope.enableZoom)return;handleMouseMoveDolly(event);break;case STATE.PAN:if(!1===scope.enablePan)return;handleMouseMovePan(event)}}function onMouseUp(event){!1!==scope.enabled&&(handleMouseUp(event),document.removeEventListener("mousemove",onMouseMove,!1),document.removeEventListener("mouseup",onMouseUp,!1),scope.dispatchEvent(endEvent),state=STATE.NONE)}function onMouseWheel(event){!1===scope.enabled||!1===scope.enableZoom||state!==STATE.NONE&&state!==STATE.ROTATE||(event.preventDefault(),event.stopPropagation(),handleMouseWheel(event),scope.dispatchEvent(startEvent),scope.dispatchEvent(endEvent))}function onKeyDown(event){!1!==scope.enabled&&!1!==scope.enableKeys&&!1!==scope.enablePan&&handleKeyDown(event)}function onTouchStart(event){if(!1!==scope.enabled){switch(event.touches.length){case 1:if(!1===scope.enableRotate)return;handleTouchStartRotate(event),state=STATE.TOUCH_ROTATE;break;case 2:if(!1===scope.enableZoom)return;handleTouchStartDolly(event),state=STATE.TOUCH_DOLLY;break;case 3:if(!1===scope.enablePan)return;handleTouchStartPan(event),state=STATE.TOUCH_PAN;break;default:state=STATE.NONE}state!==STATE.NONE&&scope.dispatchEvent(startEvent)}}function onTouchMove(event){if(!1!==scope.enabled)switch(event.preventDefault(),event.stopPropagation(),event.touches.length){case 1:if(!1===scope.enableRotate)return;if(state!==STATE.TOUCH_ROTATE)return;handleTouchMoveRotate(event);break;case 2:if(!1===scope.enableZoom)return;if(state!==STATE.TOUCH_DOLLY)return;handleTouchMoveDolly(event);break;case 3:if(!1===scope.enablePan)return;if(state!==STATE.TOUCH_PAN)return;handleTouchMovePan(event);break;default:state=STATE.NONE}}function onTouchEnd(event){!1!==scope.enabled&&(handleTouchEnd(event),scope.dispatchEvent(endEvent),state=STATE.NONE)}function onContextMenu(event){!1!==scope.enabled&&event.preventDefault()}this.object=object,this.domElement=void 0!==domElement?domElement:document,this.enabled=!0,this.target=new THREE.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return spherical.phi},this.getAzimuthalAngle=function(){return spherical.theta},this.saveState=function(){scope.target0.copy(scope.target),scope.position0.copy(scope.object.position),scope.zoom0=scope.object.zoom},this.reset=function(){scope.target.copy(scope.target0),scope.object.position.copy(scope.position0),scope.object.zoom=scope.zoom0,scope.object.updateProjectionMatrix(),scope.dispatchEvent(changeEvent),scope.update(),state=STATE.NONE},this.update=function(){var offset=new THREE.Vector3,quat=(new THREE.Quaternion).setFromUnitVectors(object.up,new THREE.Vector3(0,1,0)),quatInverse=quat.clone().inverse(),lastPosition=new THREE.Vector3,lastQuaternion=new THREE.Quaternion;return function(){var position=scope.object.position;return offset.copy(position).sub(scope.target),offset.applyQuaternion(quat),spherical.setFromVector3(offset),scope.autoRotate&&state===STATE.NONE&&rotateLeft(getAutoRotationAngle()),spherical.theta+=sphericalDelta.theta,spherical.phi+=sphericalDelta.phi,spherical.theta=Math.max(scope.minAzimuthAngle,Math.min(scope.maxAzimuthAngle,spherical.theta)),spherical.phi=Math.max(scope.minPolarAngle,Math.min(scope.maxPolarAngle,spherical.phi)),spherical.makeSafe(),spherical.radius*=scale,spherical.radius=Math.max(scope.minDistance,Math.min(scope.maxDistance,spherical.radius)),scope.target.add(panOffset),offset.setFromSpherical(spherical),offset.applyQuaternion(quatInverse),position.copy(scope.target).add(offset),scope.object.lookAt(scope.target),!0===scope.enableDamping?(sphericalDelta.theta*=1-scope.dampingFactor,sphericalDelta.phi*=1-scope.dampingFactor):sphericalDelta.set(0,0,0),scale=1,panOffset.set(0,0,0),!!(zoomChanged||lastPosition.distanceToSquared(scope.object.position)>EPS||8*(1-lastQuaternion.dot(scope.object.quaternion))>EPS)&&(scope.dispatchEvent(changeEvent),lastPosition.copy(scope.object.position),lastQuaternion.copy(scope.object.quaternion),zoomChanged=!1,!0)}}(),this.dispose=function(){scope.domElement.removeEventListener("contextmenu",onContextMenu,!1),scope.domElement.removeEventListener("mousedown",onMouseDown,!1),scope.domElement.removeEventListener("wheel",onMouseWheel,!1),scope.domElement.removeEventListener("touchstart",onTouchStart,!1),scope.domElement.removeEventListener("touchend",onTouchEnd,!1),scope.domElement.removeEventListener("touchmove",onTouchMove,!1),document.removeEventListener("mousemove",onMouseMove,!1),document.removeEventListener("mouseup",onMouseUp,!1),window.removeEventListener("keydown",onKeyDown,!1)};var scope=this,changeEvent={type:"change"},startEvent={type:"start"},endEvent={type:"end"},STATE={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},state=STATE.NONE,EPS=1e-6,spherical=new THREE.Spherical,sphericalDelta=new THREE.Spherical,scale=1,panOffset=new THREE.Vector3,zoomChanged=!1,rotateStart=new THREE.Vector2,rotateEnd=new THREE.Vector2,rotateDelta=new THREE.Vector2,panStart=new THREE.Vector2,panEnd=new THREE.Vector2,panDelta=new THREE.Vector2,dollyStart=new THREE.Vector2,dollyEnd=new THREE.Vector2,dollyDelta=new THREE.Vector2,panLeft=function(){var v=new THREE.Vector3;return function(distance,objectMatrix){v.setFromMatrixColumn(objectMatrix,0),v.multiplyScalar(-distance),panOffset.add(v)}}(),panUp=function(){var v=new THREE.Vector3;return function(distance,objectMatrix){v.setFromMatrixColumn(objectMatrix,1),v.multiplyScalar(distance),panOffset.add(v)}}(),pan=function(){var offset=new THREE.Vector3;return function(deltaX,deltaY){var element=scope.domElement===document?scope.domElement.body:scope.domElement;if(scope.object.isPerspectiveCamera){var position=scope.object.position;offset.copy(position).sub(scope.target);var targetDistance=offset.length();targetDistance*=Math.tan(scope.object.fov/2*Math.PI/180),panLeft(2*deltaX*targetDistance/element.clientHeight,scope.object.matrix),panUp(2*deltaY*targetDistance/element.clientHeight,scope.object.matrix)}else scope.object.isOrthographicCamera?(panLeft(deltaX*(scope.object.right-scope.object.left)/scope.object.zoom/element.clientWidth,scope.object.matrix),panUp(deltaY*(scope.object.top-scope.object.bottom)/scope.object.zoom/element.clientHeight,scope.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),scope.enablePan=!1)}}();scope.domElement.addEventListener("contextmenu",onContextMenu,!1),scope.domElement.addEventListener("mousedown",onMouseDown,!1),scope.domElement.addEventListener("wheel",onMouseWheel,!1),scope.domElement.addEventListener("touchstart",onTouchStart,!1),scope.domElement.addEventListener("touchend",onTouchEnd,!1),scope.domElement.addEventListener("touchmove",onTouchMove,!1),window.addEventListener("keydown",onKeyDown,!1),this.update()},THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype),THREE.OrbitControls.prototype.constructor=THREE.OrbitControls,Object.defineProperties(THREE.OrbitControls.prototype,{center:{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(value){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!value}},noRotate:{get:function(){return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(value){console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!value}},noPan:{get:function(){return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(value){console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!value}},noKeys:{get:function(){return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(value){console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!value}},staticMoving:{get:function(){return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(value){console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!value}},dynamicDampingFactor:{get:function(){return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(value){console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=value}}});