function build(data){function animate(){requestAnimationFrame(animate),renderer.render(scene,camera)}var scene,renderer,jason=JSON.parse(data),graph=new Graph(jason,10,70);(renderer=new THREE.WebGLRenderer({antialias:!0})).setClearColor("rgb(255, 255, 255)",1),canvasWidth=window.innerWidth,canvasHeight=window.innerHeight,renderer.setSize(canvasWidth,canvasHeight),document.getElementById("WebGL").appendChild(renderer.domElement),scene=new THREE.Scene,graph.buildGraph(scene,3),camera=new THREE.PerspectiveCamera(120,canvasWidth/canvasHeight,1,500),camera.position.set(0,0,40),camera.lookAt(scene.position),camera.name="camera",scene.add(camera);var lights=[];lights[0]=new THREE.PointLight(16777215,1,0),lights[1]=new THREE.PointLight(16777215,1,0),lights[2]=new THREE.PointLight(16777215,1,0),lights[0].position.set(0,2,0),lights[1].position.set(1,2,1),lights[2].position.set(-1,-2,-1),scene.add(lights[0]),scene.add(lights[1]),scene.add(lights[2]);var eventHandler=new EventHandler(void 0,scene);document.addEventListener("mousedown",function(evt){eventHandler.mouseDownEvent(evt,camera)},!1),document.addEventListener("mousemove",function(evt){eventHandler.mouseMoveEvent(evt,renderer,graph)},!1),document.addEventListener("wheel",function(evt){eventHandler.wheelEvent(evt,camera),evt.preventDefault()},!1),animate()}var Depth=function(){function init(z2){var z=z2;return{getZ:function(){return z},setZ:function(z){this.z=z}}}var instance;return{getInstance:function(z2){return instance||(instance=init(z2)),instance}}}(),Edge=function(edgeObject,min,max,bufferGeometry,lineBasicMaterial){min=ecmaStandard(min,0),max=ecmaStandard(max,50),bufferGeometry=void 0!==bufferGeometry?bufferGeometry:void 0,lineBasicMaterial=void 0!==lineBasicMaterial?lineBasicMaterial:void 0;try{this.edgeObject=edgeObject,this.edgeObject.id="e"+edgeObject.source.toString()+edgeObject.target.toString()}catch(err){throw"Constructor must have edgeObject type as first parameter!  Constructor  params:     - edgeObject: the edge object taken from the JSON file;     - bufferGeometry: a generic bufferGeometry (from three.js);     - lineBasicMaterial: line material for the object (from three.js)."}finally{void 0==this.edgeObject.weight&&(this.edgeObject.weight=1),this.edgeRadius=(this.edgeObject.weight-min)/(max-min),void 0!=bufferGeometry&&void 0==lineBasicMaterial?(this.bufferGeometry=bufferGeometry,this.lineBasicMaterial=new THREE.LineBasicMaterial({color:9277585,side:THREE.DoubleSide})):void 0==bufferGeometry&&void 0!=lineBasicMaterial?(this.bufferGeometry=new THREE.BufferGeometry,this.lineBasicMaterial=lineBasicMaterial):void 0!=bufferGeometry&&void 0!=lineBasicMaterial?(this.bufferGeometry=bufferGeometry,this.lineBasicMaterial=lineBasicMaterial):(this.bufferGeometry=new THREE.BufferGeometry,this.lineBasicMaterial=new THREE.LineBasicMaterial({color:9277585,side:THREE.DoubleSide}))}};Edge.prototype.getEdge=function(){var edge=new Edge;return edge.setBufferGeometry(this.circleBufferGeometry),edge.setLineBasicMaterial(this.lineBasicMaterial),edge.setLine(this.line),edge},Edge.prototype.setEdge=function(edge){this.setBufferGeometry(edge.bufferGeometry),this.setlineBasicMaterial(edge.setlineBasicMaterial),this.setLine(edge.line)},Edge.prototype.getBufferGeometry=function(){return this.bufferGeometry},Edge.prototype.setBufferGeometry=function(bufferGeometry){this.bufferGeometry=bufferGeometry},Edge.prototype.getlineBasicMaterial=function(){return this.lineBasicMaterial},Edge.prototype.setlineBasicMaterial=function(lineBasicMaterial){this.lineBasicMaterial=lineBasicMaterial},Edge.prototype.getLine=function(){return this.line},Edge.prototype.setLine=function(line){this.line=line},Edge.prototype.buildEdge=function(source,target){var sourcePos=source.getCircle().position,targetPos=target.getCircle().position;this.bufferGeometry=new THREE.BufferGeometry;var path=new Float32Array([sourcePos.x,sourcePos.y,sourcePos.z,targetPos.x,targetPos.y,targetPos.z]);this.bufferGeometry.addAttribute("position",new THREE.BufferAttribute(path,3)),this.line=new THREE.Line(this.bufferGeometry,this.lineBasicMaterial),this.line.name="e"+this.edgeObject.source+this.edgeObject.target,this.line.boundingBox=null,this.line.renderOrder=0},Edge.prototype.highlight=function(){this.line.material.color.setHex(16711680)},Edge.prototype.unhighlight=function(){this.line.material.color.setHex(9277585)};var Graph=function(graph,min,max){min=ecmaStandard(min),max=ecmaStandard(max);try{if(this.graphInfo=graph.graphInfo[0],void 0!=this.graphInfo.vlayer?(this.firstLayer=this.graphInfo.vlayer.split(" "),this.firstLayer=this.firstLayer[0],this.lastLayer=this.graphInfo.vlayer.split(" "),this.lastLayer=this.lastLayer[this.lastLayer.length-1]):this.firstLayer=this.lastLayer=Math.floor(graph.nodes.length/2),this.graphInfo.min=min,this.graphInfo.max=max,graph.nodes instanceof Array){this.nodes=[];for(i=0;i<graph.nodes.length;i++)this.nodes[i]=new Node(graph.nodes[i],min,max)}if(graph.links instanceof Array){this.edges=[];for(var i=0;i<graph.links.length;i++)this.edges[i]=new Edge(graph.links[i])}}catch(err){throw"Unexpected error ocurred at line "+err.lineNumber+", in function Graph. "+err}};Graph.prototype.getElementById=function(id){return"e"==id.slice(0,1)?this.getEdgeById(id):this.getNodeById(id)},Graph.prototype.getNodes=function(){return this.nodes},Graph.prototype.getNodesMeshes=function(){for(var meshes=[],i=0;i<this.nodes.length;i++)meshes.push(this.nodes[i].getCircle());return meshes},Graph.prototype.getNodeById=function(id){return this.getNodeByIndex(this.findNode(id))},Graph.prototype.findNode=function(id){for(var i=0;i<this.nodes.length;i++)if(this.nodes[i].nodeObject.id==id)return i;return-1},Graph.prototype.getNodeByIndex=function(i){return-1!=i?this.nodes[i]:"Node not found."},Graph.prototype.getNumberOfNodes=function(){return this.nodes.length},Graph.prototype.setNodeById=function(id,node){var index=this.findNode(id);this.nodes[index].setNode(node)},Graph.prototype.getEdges=function(){return this.edges},Graph.prototype.getEdgesMeshes=function(){for(var meshes=[],i=0;i<this.edges.length;i++)meshes.push(this.edges[i].getLine());return meshes},Graph.prototype.getEdgeById=function(id){return this.getEdgeByIndex(this.findEdge(id))},Graph.prototype.findEdge=function(id){for(var i=0;i<this.edges.length;i++)if(this.edges[i].edgeObject.id==id)return i;return-1},Graph.prototype.getEdgeByIndex=function(i){return-1!=i?this.edges[i]:"Edge not found."},Graph.prototype.getEdgeByIndex=function(i){return this.edges[i]},Graph.prototype.getNumberOfEdges=function(){return this.edges.length},Graph.prototype.setEdgeById=function(id,edge){var index=this.findEdge(id);this.edges[index].setEdge(edge)},Graph.prototype.buildGraph=function(scene,layout){layout=ecmaStandard(layout,3),scene=ecmaStandard(scene,void 0);try{var scale,theta;scale=d3.scaleLinear().domain([0,this.getNumberOfNodes()]).range([0,2*Math.PI]),2==layout?theta=scale(i):3==layout&&(theta=3);for(var j=0,i=0;i<this.nodes.length;i++)i==this.firstLayer?(theta=this.firstLayer/this.lastLayer*theta,console.log("new theta: "+theta),j=parseInt(j)+parseInt(1)):i>this.firstLayer&&(j=parseInt(j)+parseInt(1)),this.nodes[i].buildNode(i,this.firstLayer,j,10,theta,layout),void 0!==scene&&scene.add(this.nodes[i].getCircle());for(i=0;i<this.edges.length;i++)this.edges[i].buildEdge(this.getNodeById(this.edges[i].edgeObject.source),this.getNodeById(this.edges[i].edgeObject.target)),void 0!==scene&&scene.add(this.edges[i].getLine())}catch(err){throw"Unexpected error ocurred at line "+err.line+". "+err}};var Node=function(nodeObject,min,max,circleGeometry,meshBasicMaterial){min=ecmaStandard(min,0),max=ecmaStandard(max,10),circleGeometry=ecmaStandard(circleGeometry,void 0),meshBasicMaterial=ecmaStandard(meshBasicMaterial,void 0);try{this.nodeObject=nodeObject}catch(err){throw"Constructor must have nodeObject type as first parameter!  Constructor  params:     - nodeObject: the node object taken from the JSON file;     - circleGeometry: a geometry of type circle (from three.js);     - meshBasicMaterial: material for the geometry (from three.js)."}finally{void 0==this.nodeObject.weight&&(this.nodeObject.weight=1);var x=(this.nodeObject.weight-min)/(max-min)+1.5;this.circleGeometry=new THREE.CircleGeometry(x,100),this.meshBasicMaterial=void 0==meshBasicMaterial?new THREE.MeshBasicMaterial({color:0,side:THREE.DoubleSide,depthFunc:THREE.AlwaysDepth}):meshBasicMaterial,this.circle=new THREE.Mesh(this.circleGeometry,this.meshBasicMaterial),this.circle.name=""+this.nodeObject.id,this.circle.geometry.computeFaceNormals(),this.circle.geometry.computeBoundingBox(),this.circle.geometry.computeBoundingSphere(),this.circle.geometry.verticesNeedUpdate=!0,this.circle.renderOrder=1}};Node.prototype.getNode=function(){var node=new Node;return node.setCircleGeometry(this.circleGeometry),node.setMeshBasicMaterial(this.meshBasicMaterial),node.setCircle(this.circle),node},Node.prototype.setNode=function(node){this.setCircleGeometry(node.circleGeometry),this.setMeshBasicMaterial(node.meshBasicMaterial),this.setCircle(node.circle)},Node.prototype.getCircleGeometry=function(){return this.circleGeometry},Node.prototype.setCircleGeometry=function(circleGeometry){this.circleGeometry=circleGeometry},Node.prototype.getMeshBasicMaterial=function(){return this.meshBasicMaterial},Node.prototype.setMeshBasicMaterial=function(meshBasicMaterial){this.meshBasicMaterial=meshBasicMaterial},Node.prototype.getCircle=function(){return this.circle},Node.prototype.setCircle=function(circle){this.circle=circle},Node.prototype.buildNode=function(index,firstLayer,lastLayer,alpha,theta,layout){switch(layout){case 1:this.buildForceDirected();break;case 2:this.buildRadial(theta);break;case 3:this.buildBipartite(index,firstLayer,lastLayer,alpha,theta)}},Node.prototype.buildForceDirected=function(){console.log("To be implemented")},Node.prototype.buildRadial=function(theta){var x=15*Math.sin(theta),y=15*Math.cos(theta);this.circle.position.set(x,y,0)},Node.prototype.buildBipartite=function(index,firstLayer,lastLayer,alpha,theta){if(index>=firstLayer){x=alpha;index=lastLayer,console.log("new index: "+index)}else var x=-1*alpha;y=index*theta,this.circle.position.set(x,y,0)},Node.prototype.highlight=function(){this.circle.material.color.setHex(16711680)},Node.prototype.unhighlight=function(){this.circle.material.color.setHex(0)};var ecmaStandard=function(variable,defaultValue){return void 0!==variable?variable:defaultValue},EventHandler=function(raycaster,scene){raycaster=ecmaStandard(raycaster,void 0),scene=ecmaStandard(scene,void 0),this.raycaster=new THREE.Raycaster,this.scene=scene,this.highlightedElements=[]};EventHandler.prototype.getRaycaster=function(){return this.raycaster},EventHandler.prototype.setRaycaster=function(raycaster){this.raycaster=raycaster},EventHandler.prototype.getScene=function(){return this.scene},EventHandler.prototype.setScene=function(scene){this.scene=scene},EventHandler.prototype.getHighlightedElements=function(){return this.highlightedElements},EventHandler.prototype.setHighlightedElements=function(highlighted){this.highlightedElements=highlighted},EventHandler.prototype.dragEvent=function(evt,camera){console.log("dragging")},EventHandler.prototype.wheelEvent=function(evt,camera){evt.deltaY>0?camera.zoom-4>0&&(camera.zoom=camera.zoom-4,camera.updateProjectionMatrix()):(camera.zoom=camera.zoom+4,camera.updateProjectionMatrix())},EventHandler.prototype.mouseDownEvent=function(evt,camera){var lastPosition={},cam=camera;document.onmouseup=function(evt){document.onmousemove=null,document.onmouseup=null},document.onmousemove=function(evt){if(void 0!=typeof lastPosition.x){var deltaX=lastPosition.x-evt.clientX,deltaY=lastPosition.y-evt.clientY;Math.abs(deltaX)>Math.abs(deltaY)&&deltaX>0?cam.position.x=cam.position.x+2.5:Math.abs(deltaX)>Math.abs(deltaY)&&deltaX<0?cam.position.x=cam.position.x-2.5:Math.abs(deltaY)>Math.abs(deltaX)&&deltaY>0?cam.position.y=cam.position.y-2.5:Math.abs(deltaY)>Math.abs(deltaX)&&deltaY<0&&(cam.position.y=cam.position.y+2.5)}lastPosition={x:evt.clientX,y:evt.clientY}}},EventHandler.prototype.mouseMoveEvent=function(evt,renderer,graph){var canvas=renderer.domElement.getBoundingClientRect(),x=evt.clientX-canvas.left,y=evt.clientY-canvas.top,mouseX=x/renderer.domElement.clientWidth*2-1,mouseY=-y/renderer.domElement.clientHeight*2+1,mouse=new THREE.Vector2(mouseX,mouseY),camera=this.scene.getObjectByName("camera",!0);this.raycaster.setFromCamera(mouse,camera);for(var intersection=this.raycaster.intersectObjects(this.scene.children,!0)[0],i=0;i<this.highlightedElements.length;i++)(element=graph.getElementById(this.highlightedElements[i])).unhighlight(),element instanceof Node?(graph.setNodeById(this.highlightedElements[i],element),d3.select("#name").style("display","none")):graph.setEdgeById(this.highlightedElements[i],element),this.highlightedElements.splice(i,1);if(void 0!=intersection){var element=graph.getElementById(intersection.object.name);console.log(element),element.highlight(),element instanceof Node?(graph.setNodeById(intersection.object.name,element),d3.select("#name").text(element.circle.name).attr("font-family","sans-serif").attr("font-size","20px").style("display","inline").style("position","absolute").style("z-index","1").style("top",y).style("left",x).attr("fill","green")):graph.setEdgeById(intersection.object.name,element),this.highlightedElements.push(intersection.object.name)}},EventHandler.prototype.mouseOutEvent=function(graph){for(var i=0;i<this.highlightedElements.length;i++){var element=graph.getElementById(this.highlightedElements[i]);element.unhighlight(),element instanceof Node?graph.setNodeById(this.highlightedElements[i],element):graph.setEdgeById(this.highlightedElements[i],element)}this.highlightedElements=[]};